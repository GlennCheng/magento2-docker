version: '3'

services:

  mysql:
    image: mariadb:10.4
    ports: 
      - "33060:3306"
    environment:
      MYSQL_USER: magento
      MYSQL_PASSWORD: magento
      MYSQL_ROOT_PASSWORD: magento
      MYSQL_DATABASE: magento
      MYSQL_ROOT_HOST: "%"
    networks:
      - "magento"
    volumes:
      - /var/run/mysqld:/var/run/mysqld      
      - ./var/lib/mysql:/var/lib/mysql
        #      - ./config/mysql/my.cnf:/etc/alternatives/my.cnf

  web:
    image: magento/magento-cloud-docker-nginx:latest
    ports:
      - "80:80"
      - "443:443"
    links:
      - fpm
    volumes: &appvolumes
      - "./config/letsencrypt:/etc/letsencrypt"
      - "./src:/app:delegated"
      - "./config/cron/crontabs/root:/etc/cron.d/root"
      - "./config/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf"
      - "./composer/auth.json:/root/.composer/auth.json:delegated"
        #      - "./composer/auth.json:/app/var/composer_home/auth.json:delegated"
      - "~/.composer/cache:/root/.composer/cache:delegated"
        #      - "~/.composer/cache:/app/var/composer_home/cache:delegated"
    env_file: ./config/common.env
    environment:
      - "VERBOSE:true"
      - "HOSTNAME=${HOSTNAME}"
    networks:
      - "magento"

  cli:
    image: magento/magento-cloud-docker-php:7.4-cli-1.1
    depends_on:
      - mysql
      - elasticsearch  
    volumes:  *appvolumes
    command: bash -c "${NEW_DATABASE_COMMAND:- }${COMPOSER_INSTALL_COMMAND:- }${MAGENTO_INSTALL_COMMAND:- } php bin/magento setup:store-config:set --base-url='https://${HOSTNAME:- }/'; php bin/magento setup:store-config:set --base-url-secure='https://${HOSTNAME:- }/'; php bin/magento c:fl; service sendmail stop; tail -f /dev/null"
    env_file: ./config/common.env
    environment: &appenvironment
      - "VERBOSE=true"
      - "UPDATE_UID_GID=true"
      - "MAGENTO_RUN_MODE=developer"
      - "ENABLE_SENDMAIL=true"
    networks:
      - "magento"

  fpm:
    image: magento/magento-cloud-docker-php:7.4-fpm-1.1
    volumes: *appvolumes
    env_file: ./config/common.env
    environment: *appenvironment
    networks:
      - "magento"

  elasticsearch:
    image: magento/magento-cloud-docker-elasticsearch:7.7-1.1
    #ports:
    #- "9200:9200"
    #- "9300:9300"
    environment:
      - "discovery.type=single-node"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - "./config/elasticsearch/plugins:/usr/share/elasticsearch/plugins"
      - "./config/elasticsearch/config/analysis-ik:/usr/share/elasticsearch/config/analysis-ik"    
    networks:
      - "magento"

  redis:
    image: 'redis:latest'
    volumes:
      - /data
      - ./config/redis/sysctl.conf:/etc/sysctl.conf
    ports:
      - 6379
    restart: always
    networks:
      - "magento"

  cron:
    image: 'magento/magento-cloud-docker-php:7.4-cli-1.1'
    hostname: cron.magento2.docker
    depends_on:
      - redis
      - elasticsearch
    env_file: ./config/common.env
    volumes: *appvolumes
    networks:
      - "magento"
    environment:
      CRONTAB: '* * * * * root cd /app && /usr/local/bin/php bin/magento cron:run >> /app/var/log/cron.log'
    command: bash -c "/etc/init.d/sendmail start && run-cron"

networks:
  magento:
    driver: bridge


